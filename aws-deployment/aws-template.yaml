AWSTemplateFormatVersion: '2010-09-09'
Description: Secure AWS deployment for AIr4LifeOnTheEdge cloud analytics with NebulOuS integration

Parameters:
  EnvironmentName:
    Description: Environment name prefix for resources
    Type: String
    Default: Air4LifeProd

  InstanceType:
    Description: EC2 instance type for cloud analytics node
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium

  AmiId:
    Description: Amazon Linux 2 AMI ID
    Type: AWS::EC2::Image::Id

  KeyName:
    Description: EC2 Key Pair for SSH access
    Type: AWS::EC2::KeyPair::KeyName

  SSHSourceIP:
    Description: Allowed SSH source IP/CIDR (e.g., 123.45.67.89/32)
    Type: String
    Default: 123.45.67.89/32

  VpcCIDR:
    Description: VPC CIDR block
    Type: String
    Default: 10.192.0.0/16

  PublicSubnetCIDR:
    Description: Public subnet CIDR block
    Type: String
    Default: 10.192.10.0/24

Conditions:
  CreateNewVPC: !Equals [!Ref VpcId, ""]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Condition: CreateNewVPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !If [CreateNewVPC, !Ref VPC, !Ref VpcId]
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-IGW

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !If [CreateNewVPC, !Ref VPC, !Ref VpcId]
      InternetGatewayId: !Ref InternetGateway

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security group for ${EnvironmentName} nodes"
      VpcId: !If [CreateNewVPC, !Ref VPC, !Ref VpcId]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHSourceIP
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: !If [CreateNewVPC, !Ref VpcCIDR, !Ref ExistingVpcCidr]

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          systemctl enable docker
          systemctl start docker
          docker run -d -p 5000:5000 ${DockerImageURI}

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: [!Ref PublicSubnet]
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Node
          PropagateAtLaunch: true

Outputs:
  VPCId:
    Description: VPC ID
    Value: !If [CreateNewVPC, !Ref VPC, !Ref VpcId]
  PublicSubnet:
    Description: Public subnet ID
    Value: !Ref PublicSubnet
  SecurityGroupId:
    Description: Instance security group ID
    Value: !Ref InstanceSecurityGroup
  AutoScalingGroupName:
    Description: Auto Scaling Group Name
    Value: !Ref AutoScalingGroup


